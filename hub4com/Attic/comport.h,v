head	1.4;
access;
symbols
	v1_1_0_0:1.3
	RELEASED:1.3
	v1_0_0_0:1.3;
locks; strict;
comment	@ * @;


1.4
date	2008.03.26.08.50.35;	author vfrolov;	state dead;
branches;
next	1.3;

1.3
date	2007.02.06.11.53.33;	author vfrolov;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.05.09.33.20;	author vfrolov;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.23.09.13.10;	author vfrolov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Redesigned for using plugins
@
text
@/*
 * $Id: comport.h,v 1.3 2007/02/06 11:53:33 vfrolov Exp $
 *
 * Copyright (c) 2006-2007 Vyacheslav Frolov
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *
 * $Log: comport.h,v $
 * Revision 1.3  2007/02/06 11:53:33  vfrolov
 * Added options --odsr, --ox, --ix and --idsr
 * Added communications error reporting
 *
 * Revision 1.2  2007/02/05 09:33:20  vfrolov
 * Implemented internal flow control
 *
 * Revision 1.1  2007/01/23 09:13:10  vfrolov
 * Initial revision
 *
 *
 */

#ifndef _COMPORT_H
#define _COMPORT_H

///////////////////////////////////////////////////////////////
class ComHub;
class ComParams;
class WriteOverlapped;
class ReadOverlapped;
///////////////////////////////////////////////////////////////
class ComPort
{
  public:
    ComPort(ComHub &_hub);

    BOOL Open(const char *pPath, const ComParams &comParams);
    BOOL Start();
    BOOL Write(LPCVOID pData, DWORD len);
    void OnWrite(WriteOverlapped *pOverlapped, DWORD len, DWORD done);
    void OnRead(ReadOverlapped *pOverlapped, LPCVOID pBuf, DWORD done);
    void AddXoff(int count);
    const string &Name() const { return name; }
    HANDLE Handle() const { return handle; }
    void LostReport();

  private:
    BOOL StartRead();

    string name;
    HANDLE handle;
    ComHub &hub;
    int countReadOverlapped;
    int countXoff;
    BOOL filterX;

    DWORD writeQueueLimit;
    DWORD writeQueued;
    DWORD writeLost;
    DWORD writeLostTotal;
};
///////////////////////////////////////////////////////////////

#endif  // _COMPORT_H
@


1.3
log
@Added options --odsr, --ox, --ix and --idsr
Added communications error reporting
@
text
@d2 1
a2 1
 * $Id: comport.h,v 1.2 2007/02/05 09:33:20 vfrolov Exp $
d22 4
@


1.2
log
@Implemented internal flow control
@
text
@d2 1
a2 1
 * $Id: comport.h,v 1.1 2007/01/23 09:13:10 vfrolov Exp $
d22 3
d63 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $Id:  $
d21 4
a24 1
 * $Log: $
d34 2
d45 3
a47 1
    void OnRead(LPCVOID pBuf, DWORD done);
a49 2
    DWORD &WriteQueued() { return writeQueued; }
    DWORD &WriteLost() { return writeLost; }
d53 2
d58 2
d61 1
@

