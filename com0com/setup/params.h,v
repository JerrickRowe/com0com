head	1.14;
access;
symbols
	v3_0_0_0:1.14
	v2_2_2_0:1.8
	v2_2_1_0:1.8
	v2_2_0_0:1.8
	v2_1_0_0:1.6
	v2_0_0_0:1.5
	v1_8_0_0:1.3
	RELEASED:1.14
	v1_7_0_0:1.2;
locks; strict;
comment	@ * @;


1.14
date	2012.01.31.05.48.32;	author vfrolov;	state Exp;
branches;
next	1.13;

1.13
date	2011.12.29.14.34.23;	author vfrolov;	state Exp;
branches;
next	1.12;

1.12
date	2011.12.27.11.38.13;	author vfrolov;	state Exp;
branches;
next	1.11;

1.11
date	2011.12.15.15.51.48;	author vfrolov;	state Exp;
branches;
next	1.10;

1.10
date	2011.12.06.16.03.22;	author vfrolov;	state Exp;
branches;
next	1.9;

1.9
date	2010.05.31.07.58.14;	author vfrolov;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.17.07.58.32;	author vfrolov;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.26.13.39.19;	author vfrolov;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.04.09.53.51;	author vfrolov;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.19.16.09.55;	author vfrolov;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.03.14.39.49;	author vfrolov;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.01.16.32.04;	author vfrolov;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.27.13.11.58;	author vfrolov;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.28.12.16.43;	author vfrolov;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Deprecated invoking of system-supplied advanced settings dialog box
@
text
@/*
 * $Id: params.h,v 1.13 2011/12/29 14:34:23 vfrolov Exp $
 *
 * Copyright (c) 2006-2012 Vyacheslav Frolov
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *
 * $Log: params.h,v $
 * Revision 1.13  2011/12/29 14:34:23  vfrolov
 * Implemented RealPortName=COM<n> for PortName=COM#
 *
 * Revision 1.12  2011/12/27 11:38:13  vfrolov
 * Superseded incorrect PortParameters::ClassChanged()
 *
 * Revision 1.11  2011/12/15 15:51:48  vfrolov
 * Fixed types
 *
 * Revision 1.10  2011/12/06 16:03:22  vfrolov
 * Added cleaning high data bits for less then 8 bit data
 * Added AllDataBits option to force 8 bit data
 *
 * Revision 1.9  2010/05/31 07:58:14  vfrolov
 * Added ability to invoke the system-supplied advanced settings dialog box
 *
 * Revision 1.8  2008/09/17 07:58:32  vfrolov
 * Added AddRTTO and AddRITO parameters
 *
 * Revision 1.7  2008/06/26 13:39:19  vfrolov
 * Implemented noise emulation
 *
 * Revision 1.6  2008/05/04 09:53:51  vfrolov
 * Implemented HiddenMode option
 *
 * Revision 1.5  2007/10/19 16:09:55  vfrolov
 * Implemented --detail-prms option
 *
 * Revision 1.4  2007/07/03 14:39:49  vfrolov
 * Implemented pinout customization
 *
 * Revision 1.3  2007/06/01 16:32:04  vfrolov
 * Implemented plug-in and exclusive modes
 *
 * Revision 1.2  2006/10/27 13:11:58  vfrolov
 * Added PortParameters::FillPortName()
 *
 * Revision 1.1  2006/07/28 12:16:43  vfrolov
 * Initial revision
 *
 */

#ifndef _C0C_PARAMS_H_
#define _C0C_PARAMS_H_

struct Bit;

class PortParameters {
  public:
    PortParameters(const char *pService, const char *pPhPortName);

    void Init();
    LONG Load();
    LONG Save();
    bool InitRealPortName(const char *pRealPortName = "");
    bool ParseParametersStr(const char *pParameters);
    bool FillParametersStr(char *pParameters, int size, bool detail);
    bool FillPortName(char *pPortName, int size);
    bool FillRealPortName(char *pRealPortName, int size);
    bool Changed() const { return maskChanged != 0; }

    static const char *PortParameters::GetHelp();

  protected:
    bool FillParametersKey(char *pRegKey, int size);
    DWORD *GetDwPtr(DWORD bit);
    void LoadDw(HKEY hKey, DWORD bit);
    LONG SaveDw(HKEY hKey, DWORD bit);

    bool SetPortName(const char *pNewPortName);
    bool SetRealPortName(const char *pNewRealPortName);
    bool SetFlag(const char *pNewVal, DWORD bit);
    bool SetPin(const char *pNewVal, DWORD bit);
    bool SetProbability(const char *pNewVal, DWORD bit);
    bool SetUnsigned(const char *pNewVal, DWORD bit);
    bool SetBit(const char *pVal, const Bit &bit);

    DWORD maskChanged;
    DWORD maskExplicit;
    char portName[20];
    char realPortName[20];
    DWORD emuBR;
    DWORD emuOverrun;
    DWORD plugInMode;
    DWORD exclusiveMode;
    DWORD hiddenMode;
    DWORD allDataBits;
    DWORD pinCTS;
    DWORD pinDSR;
    DWORD pinDCD;
    DWORD pinRI;
    DWORD emuNoise;
    DWORD addRTTO;
    DWORD addRITO;

    char service[20];
    char phPortName[20];
};

#endif /* _C0C_PARAMS_H_ */
@


1.13
log
@Implemented RealPortName=COM<n> for PortName=COM#
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.12 2011/12/27 11:38:13 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2006-2011 Vyacheslav Frolov
d22 3
a81 1
    bool DialogRequested() const { return dialogRequested; }
a98 1
    bool dialogRequested;
@


1.12
log
@Superseded incorrect PortParameters::ClassChanged()
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.11 2011/12/15 15:51:48 vfrolov Exp $
d22 3
d73 1
d77 1
d90 1
d101 1
@


1.11
log
@Fixed types
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.10 2011/12/06 16:03:22 vfrolov Exp $
d22 3
a73 1
    bool ClassChanged() const { return classChanged; }
a90 1
    bool classChanged;
@


1.10
log
@Added cleaning high data bits for less then 8 bit data
Added AllDataBits option to force 8 bit data
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.9 2010/05/31 07:58:14 vfrolov Exp $
d22 4
d67 6
a72 6
    BOOL ParseParametersStr(const char *pParameters);
    BOOL FillParametersStr(char *pParameters, int size, BOOL detail);
    BOOL FillPortName(char *pPortName, int size);
    BOOL Changed() const { return maskChanged != 0; }
    BOOL ClassChanged() const { return classChanged; }
    BOOL DialogRequested() const { return dialogRequested; }
d77 1
a77 1
    BOOL FillParametersKey(char *pRegKey, int size);
d82 6
a87 6
    BOOL SetPortName(const char *pNewPortName);
    BOOL SetFlag(const char *pNewVal, DWORD bit);
    BOOL SetPin(const char *pNewVal, DWORD bit);
    BOOL SetProbability(const char *pNewVal, DWORD bit);
    BOOL SetUnsigned(const char *pNewVal, DWORD bit);
    BOOL SetBit(const char *pVal, const Bit &bit);
d89 2
a90 2
    BOOL classChanged;
    BOOL dialogRequested;
@


1.9
log
@Added ability to invoke the system-supplied advanced settings dialog box
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.8 2008/09/17 07:58:32 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2006-2010 Vyacheslav Frolov
d22 3
d95 1
@


1.8
log
@Added AddRTTO and AddRITO parameters
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.7 2008/06/26 13:39:19 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2006-2008 Vyacheslav Frolov
d22 3
d64 2
d82 2
@


1.7
log
@Implemented noise emulation
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.6 2008/05/04 09:53:51 vfrolov Exp $
d22 3
d74 1
d90 2
@


1.6
log
@Implemented HiddenMode option
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.5 2007/10/19 16:09:55 vfrolov Exp $
d22 3
d45 2
d63 4
a67 1
    DWORD *GetDwPtr(DWORD bit);
d70 2
a71 2
    void LoadDw(HKEY hKey, DWORD bit);
    LONG SaveDw(HKEY hKey, DWORD bit);
d85 1
@


1.5
log
@Implemented --detail-prms option
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.4 2007/07/03 14:39:49 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2006-2007 Vyacheslav Frolov
d22 3
a36 1
 *
d72 1
@


1.4
log
@Implemented pinout customization
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.3 2007/06/01 16:32:04 vfrolov Exp $
d22 3
d48 1
a48 1
    BOOL FillParametersStr(char *pParameters, int size);
a57 1
    const char *GetBitName(DWORD bit);
@


1.3
log
@Implemented plug-in and exclusive modes
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.2 2006/10/27 13:11:58 vfrolov Exp $
d22 3
d54 1
a54 1
    DWORD *GetFlagPtr(DWORD bit);
d56 4
a59 3
    BOOL SetFlag(const char *pNewFlag, DWORD bit);
    void LoadFlag(HKEY hKey, DWORD bit);
    LONG SaveFlag(HKEY hKey, DWORD bit);
d68 4
@


1.2
log
@Added PortParameters::FillPortName()
@
text
@d2 1
a2 1
 * $Id: params.h,v 1.1 2006/07/28 12:16:43 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2006 Vyacheslav Frolov
d22 3
d51 5
a55 2
    BOOL SetEmuBR(const char *pNewEmuBR);
    BOOL SetEmuOverrun(const char *pNewEmuOverrun);
d62 2
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $Id: $
d21 4
a24 1
 * $Log: $
d40 1
@

