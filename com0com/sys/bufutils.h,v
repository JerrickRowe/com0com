head	1.9;
access;
symbols
	v3_0_0_0:1.9
	v2_2_2_0:1.8
	v2_2_1_0:1.8
	v2_2_0_0:1.8
	v2_1_0_0:1.6
	v2_0_0_0:1.6
	v1_8_0_0:1.5
	v1_7_0_0:1.5
	v1_6_0_0:1.5
	v1_5_0_0:1.3
	v1_4_0_0:1.2
	RELEASED:1.9
	v1_3_0_0:1.1;
locks; strict;
comment	@ * @;


1.9
date	2010.08.04.10.38.55;	author vfrolov;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.30.07.54.37;	author vfrolov;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.26.13.37.10;	author vfrolov;	state Exp;
branches;
next	1.6;

1.6
date	2007.07.20.08.00.22;	author vfrolov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.17.15.28.03;	author vfrolov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.10.10.17.23;	author vfrolov;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.28.12.57.16;	author vfrolov;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.06.07.23.44;	author vfrolov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.25.15.38.17;	author vfrolov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Minimized PREfast noise
@
text
@/*
 * $Id: bufutils.h,v 1.8 2008/10/30 07:54:37 vfrolov Exp $
 *
 * Copyright (c) 2005-2010 Vyacheslav Frolov
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *
 * $Log: bufutils.h,v $
 * Revision 1.8  2008/10/30 07:54:37  vfrolov
 * Improved BREAK emulation
 *
 * Revision 1.7  2008/06/26 13:37:10  vfrolov
 * Implemented noise emulation
 *
 * Revision 1.6  2007/07/20 08:00:22  vfrolov
 * Implemented TX buffer
 *
 * Revision 1.5  2006/05/17 15:28:03  vfrolov
 * Implemented SERIAL_DSR_SENSITIVITY
 *
 * Revision 1.4  2006/01/10 10:17:23  vfrolov
 * Implemented flow control and handshaking
 * Implemented IOCTL_SERIAL_SET_XON and IOCTL_SERIAL_SET_XOFF
 * Added setting of HoldReasons, WaitForImmediate and AmountInOutQueue
 *   fields of SERIAL_STATUS for IOCTL_SERIAL_GET_COMMSTATUS
 *
 * Revision 1.3  2005/11/28 12:57:16  vfrolov
 * Moved some C0C_BUFFER code to bufutils.c
 *
 * Revision 1.2  2005/09/06 07:23:44  vfrolov
 * Implemented overrun emulation
 *
 * Revision 1.1  2005/08/25 15:38:17  vfrolov
 * Some code moved from io.c to bufutils.c
 *
 */

#ifndef _C0C_BUFUTILS_H_
#define _C0C_BUFUTILS_H_

typedef struct _C0C_FLOW_FILTER {
  PC0C_IO_PORT pIoPort;

  USHORT events;
  UCHAR flags;

  UCHAR lastXonXoff;
  SIZE_T rxCount;
} C0C_FLOW_FILTER, *PC0C_FLOW_FILTER;


NTSTATUS MoveRawData(PC0C_RAW_DATA pDstRawData, PC0C_RAW_DATA pSrcRawData);
VOID FlowFilterInit(PC0C_IO_PORT pIoPort, PC0C_FLOW_FILTER pFlowFilter);
VOID CopyCharsWithEscape(
    PC0C_BUFFER pBuf,
    PC0C_FLOW_FILTER pFlowFilter,
    PUCHAR pReadBuf, SIZE_T readLength,
    PUCHAR pWriteBuf, SIZE_T writeLength,
    PSIZE_T pReadDone,
    PSIZE_T pWriteDone);
SIZE_T ReadFromBuffer(PC0C_BUFFER pBuf, PVOID pRead, SIZE_T readLength);
SIZE_T WriteToBuffer(
    PC0C_BUFFER pBuf,
    PVOID pWrite,
    SIZE_T writeLength,
    PC0C_FLOW_FILTER pFlowFilter,
    PSIZE_T pOverrun);
VOID WriteMandatoryToBuffer(PC0C_BUFFER pBuf, UCHAR mandatoryChar);
NTSTATUS WriteRawDataToBuffer(PC0C_RAW_DATA pRawData, PC0C_BUFFER pBuf);
SIZE_T WriteRawData(PC0C_RAW_DATA pRawData, PNTSTATUS pStatus, PVOID pReadBuf, SIZE_T readLength);
BOOLEAN SetNewBufferBase(PC0C_BUFFER pBuf, PUCHAR pBase, SIZE_T size);
VOID PurgeBuffer(PC0C_BUFFER pBuf);
VOID InitBuffer(PC0C_BUFFER pBuf, __drv_aliasesMem PUCHAR pBase, SIZE_T size);
VOID FreeBuffer(PC0C_BUFFER pBuf);
VOID SetBufferLimit(PC0C_BUFFER pBuf, SIZE_T limit);
SIZE_T ReadFromTxBuffer(
    PC0C_BUFFER pBuf,
    PC0C_FLOW_FILTER pFlowFilter,
    PVOID pRead, SIZE_T readLength,
    PC0C_TX_BUFFER pTxBuf, SIZE_T txLimit,
    PSIZE_T pWriteDone);
SIZE_T WriteToTxBuffer(
    PC0C_TX_BUFFER pTxBuf,
    PVOID pWrite,
    SIZE_T writeLength);
SIZE_T MoveFromTxBuffer(
    PC0C_BUFFER pBuf,
    PC0C_TX_BUFFER pTxBuf,
    SIZE_T txLimit,
    PC0C_FLOW_FILTER pFlowFilter,
    PSIZE_T pOverrun);
VOID SetTxBuffer(PC0C_TX_BUFFER pTxBuf, SIZE_T size, BOOLEAN cleanFifo);
VOID FreeTxBuffer(PC0C_TX_BUFFER pTxBuf);

#endif /* _C0C_BUFUTILS_H_ */
@


1.8
log
@Improved BREAK emulation
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.7 2008/06/26 13:37:10 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2005-2008 Vyacheslav Frolov
d22 3
d86 1
a86 1
VOID InitBuffer(PC0C_BUFFER pBuf, PUCHAR pBase, SIZE_T size);
@


1.7
log
@Implemented noise emulation
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.6 2007/07/20 08:00:22 vfrolov Exp $
d22 3
d58 1
@


1.6
log
@Implemented TX buffer
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.5 2006/05/17 15:28:03 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2005-2007 Vyacheslav Frolov
d22 3
d49 1
a49 5
  #define C0C_FLOW_FILTER_AUTO_TRANSMIT      0x01
  #define C0C_FLOW_FILTER_EV_RXCHAR          0x02
  #define C0C_FLOW_FILTER_EV_RXFLAG          0x04
  #define C0C_FLOW_FILTER_NULL_STRIPPING     0x08
  #define C0C_FLOW_FILTER_IGNORE_RECEIVED    0x10
d51 1
a52 4
  UCHAR xonChar;
  UCHAR xoffChar;
  UCHAR eventChar;
  UCHAR escapeChar;
a53 1
  UCHAR events;
@


1.5
log
@Implemented SERIAL_DSR_SENSITIVITY
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.4 2006/01/10 10:17:23 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2005-2006 Vyacheslav Frolov
d22 3
d77 2
a78 1
    PC0C_FLOW_FILTER pFlowFilter);
d87 18
@


1.4
log
@Implemented flow control and handshaking
Implemented IOCTL_SERIAL_SET_XON and IOCTL_SERIAL_SET_XOFF
Added setting of HoldReasons, WaitForImmediate and AmountInOutQueue
  fields of SERIAL_STATUS for IOCTL_SERIAL_GET_COMMSTATUS
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.3 2005/11/28 12:57:16 vfrolov Exp $
d22 6
d47 1
@


1.3
log
@Moved some C0C_BUFFER code to bufutils.c
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.2 2005/09/06 07:23:44 vfrolov Exp $
d4 1
a4 1
 * Copyright (c) 2005 Vyacheslav Frolov
d22 3
d36 17
d54 1
d56 2
a57 1
    PC0C_BUFFER pBuf, UCHAR escapeChar,
d63 5
a67 1
SIZE_T WriteToBuffer(PC0C_BUFFER pBuf, PVOID pWrite, SIZE_T writeLength, UCHAR escapeChar);
d75 1
@


1.2
log
@Implemented overrun emulation
@
text
@d2 1
a2 1
 * $Id: bufutils.h,v 1.1 2005/08/25 15:38:17 vfrolov Exp $
d22 3
d45 4
@


1.1
log
@Some code moved from io.c to bufutils.c
@
text
@d2 1
a2 1
 * $Id:$
d21 3
a23 1
 * $Log:$
d30 1
d39 1
@

